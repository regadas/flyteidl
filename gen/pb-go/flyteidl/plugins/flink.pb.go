// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flyteidl/plugins/flink.proto

package plugins

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Custom Proto for Flink Plugin.
type FlinkJob struct {
	JarFile              string            `protobuf:"bytes,1,opt,name=jarFile,proto3" json:"jarFile,omitempty"`
	MainClass            string            `protobuf:"bytes,2,opt,name=mainClass,proto3" json:"mainClass,omitempty"`
	Args                 []string          `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	FlinkProperties      map[string]string `protobuf:"bytes,4,rep,name=flinkProperties,proto3" json:"flinkProperties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FlinkJob) Reset()         { *m = FlinkJob{} }
func (m *FlinkJob) String() string { return proto.CompactTextString(m) }
func (*FlinkJob) ProtoMessage()    {}
func (*FlinkJob) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1a8ff4a4e1d6d4, []int{0}
}

func (m *FlinkJob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlinkJob.Unmarshal(m, b)
}
func (m *FlinkJob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlinkJob.Marshal(b, m, deterministic)
}
func (m *FlinkJob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlinkJob.Merge(m, src)
}
func (m *FlinkJob) XXX_Size() int {
	return xxx_messageInfo_FlinkJob.Size(m)
}
func (m *FlinkJob) XXX_DiscardUnknown() {
	xxx_messageInfo_FlinkJob.DiscardUnknown(m)
}

var xxx_messageInfo_FlinkJob proto.InternalMessageInfo

func (m *FlinkJob) GetJarFile() string {
	if m != nil {
		return m.JarFile
	}
	return ""
}

func (m *FlinkJob) GetMainClass() string {
	if m != nil {
		return m.MainClass
	}
	return ""
}

func (m *FlinkJob) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *FlinkJob) GetFlinkProperties() map[string]string {
	if m != nil {
		return m.FlinkProperties
	}
	return nil
}

func init() {
	proto.RegisterType((*FlinkJob)(nil), "flyteidl.plugins.FlinkJob")
	proto.RegisterMapType((map[string]string)(nil), "flyteidl.plugins.FlinkJob.FlinkPropertiesEntry")
}

func init() { proto.RegisterFile("flyteidl/plugins/flink.proto", fileDescriptor_0b1a8ff4a4e1d6d4) }

var fileDescriptor_0b1a8ff4a4e1d6d4 = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xbf, 0x4b, 0xc4, 0x30,
	0x1c, 0xc5, 0xe9, 0xf5, 0xfc, 0xd1, 0xaf, 0x83, 0x47, 0xb8, 0x21, 0xc8, 0x0d, 0xc5, 0xa9, 0x8b,
	0x09, 0x78, 0x08, 0xe2, 0x78, 0xe2, 0x0d, 0x4e, 0xd2, 0x4d, 0xb7, 0x54, 0xd3, 0x18, 0xef, 0x7b,
	0x49, 0x49, 0x52, 0xa1, 0x7f, 0xb8, 0xbb, 0x5c, 0xae, 0xb5, 0x50, 0xdc, 0xde, 0xcb, 0x7b, 0x49,
	0x3e, 0x3c, 0x58, 0xd5, 0xd8, 0x05, 0xa9, 0x3f, 0x90, 0x37, 0xd8, 0x2a, 0x6d, 0x3c, 0xaf, 0x51,
	0x9b, 0x1d, 0x6b, 0x9c, 0x0d, 0x96, 0x2c, 0x86, 0x94, 0xf5, 0xe9, 0xf5, 0x4f, 0x02, 0xe7, 0xdb,
	0x43, 0xe3, 0xd9, 0x56, 0x84, 0xc2, 0xd9, 0x97, 0x70, 0x5b, 0x8d, 0x92, 0x26, 0x79, 0x52, 0x64,
	0xe5, 0x60, 0xc9, 0x0a, 0xb2, 0xbd, 0xd0, 0xe6, 0x11, 0x85, 0xf7, 0x74, 0x16, 0xb3, 0xf1, 0x80,
	0x10, 0x98, 0x0b, 0xa7, 0x3c, 0x4d, 0xf3, 0xb4, 0xc8, 0xca, 0xa8, 0xc9, 0x2b, 0x5c, 0xc6, 0x9f,
	0x5f, 0x9c, 0x6d, 0xa4, 0x0b, 0x5a, 0x7a, 0x3a, 0xcf, 0xd3, 0xe2, 0xe2, 0x96, 0xb3, 0x29, 0x04,
	0x1b, 0x00, 0x8e, 0x62, 0xbc, 0xf1, 0x64, 0x82, 0xeb, 0xca, 0xe9, 0x3b, 0x57, 0x1b, 0x58, 0xfe,
	0x57, 0x24, 0x0b, 0x48, 0x77, 0xb2, 0xeb, 0xd1, 0x0f, 0x92, 0x2c, 0xe1, 0xe4, 0x5b, 0x60, 0x2b,
	0x7b, 0xe4, 0xa3, 0x79, 0x98, 0xdd, 0x27, 0x9b, 0xbb, 0xb7, 0xb5, 0xd2, 0xe1, 0xb3, 0xad, 0xd8,
	0xbb, 0xdd, 0x73, 0xec, 0xea, 0xc0, 0xff, 0x96, 0x53, 0xd2, 0xf0, 0xa6, 0xba, 0x51, 0x96, 0x4f,
	0xc7, 0xac, 0x4e, 0xe3, 0x8e, 0xeb, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x83, 0xba, 0xdd, 0x7d,
	0x67, 0x01, 0x00, 0x00,
}
